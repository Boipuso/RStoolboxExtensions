% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/points_superClass.R
\name{points_superClass}
\alias{points_superClass}
\title{Supervised Classification using Point Training Data}
\usage{
points_superClass(
  img,
  trainPoints,
  responseCol,
  trainPartition = NULL,
  model = "rf",
  tuneLength = 3,
  kfold = 5,
  mode = "classification",
  predict = TRUE,
  predType = "raw",
  filename = NULL,
  overwrite = TRUE
)
}
\arguments{
\item{img}{A raster object. Typically remote sensing imagery, which is to be classified.}

\item{trainPoints}{A sf object containing the training points with locations.}

\item{responseCol}{The name of the column in \code{trainPoints} containing the response variable.}

\item{trainPartition}{Optional. A numeric value between 0 and 1 specifying the proportion of points to be used for training. If NULL, all points are used for training.}

\item{model}{The supervised classification model to be used. Defaults to "rf" (random forest).}

\item{tuneLength}{The number of parameter settings to explore for model tuning. Defaults to 3.}

\item{kfold}{Integer. Number of cross-validation resamples during model tuning.Defaults to 5}

\item{mode}{The mode of the model type, either "classification" or "regression". Defaults to "classification".}

\item{predict}{Logical. Produce a map (TRUE, default) or only fit and validate the model (FALSE). Defaults to TRUE.}

\item{predType}{Character. Type of the final output raster. Either "raw" for class predictions or "prob" for class probabilities. Class probabilities are not available for all classification models. Defaults to "raw".}

\item{filename}{Path to output file (optional). If NULL, standard raster handling will apply, i.e. storage either in memory or in the raster temp directory.}

\item{overwrite}{Logical indicating whether to overwrite an existing file if \code{filename} is provided. Defaults to TRUE.}
}
\value{
A trained classification model.
}
\description{
Essentially the superClass function from the RStoolbox but includes the possibility to partition point training data into training and validation sets.
}
\details{
This function trains a supervised classification model both for classification and regression mode using point training data. If \code{trainPartition} is provided, the data is split into training and validation sets according to the specified proportion. Look up ?superClass() for documentation of the base function.
}
\examples{
# Load required packages
library(RStoolbox)

# Load example data
data("landsat")
# Create point training data
trainPoints <- data.frame(x = runif(100), y = runif(100), class = sample(c("class1", "class2"), 100, replace = TRUE))
# Train model using all points
points_superClass(landsat, trainPoints, "class")
# Train model with data partitioning
points_superClass(landsat, trainPoints, "class", trainPartition = 0.7)

}
